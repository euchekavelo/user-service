before_script:
  - CHCP 65001

variables:
  BRANCH_FEATURE: feature
  BRANCH_PREPROD: preprod
  BRANCH_DEV: dev
  BRANCH_PROD: main
  APP_IMAGE: $APP_IMAGE_NAME
  JACOCO_BUILD_FILES_PATH: build/

stages:
  - test
  - build
  - deploy

workflow:
  rules:
    - if: $CI_COMMIT_BRANCH == "feature" || $CI_COMMIT_BRANCH == "dev" || $CI_COMMIT_BRANCH == "preprod"

test-job:
  stage: test
  script:
    - ./gradlew clean test
  cache:
    paths:
      - $JACOCO_BUILD_FILES_PATH
    policy: push
  tags:
    - windows


code-quality:
  stage: test
  cache:
    paths:
      - $JACOCO_BUILD_FILES_PATH
    policy: pull
  script:
    - ./gradlew sonar
  tags:
    - windows


build-job:
  stage: build
  before_script:
    - docker login -u $DOCKER_HUB_LOGIN -p $DOCKER_HUB_PASSWORD
  script:
    - ./gradlew clean bootJar
    - docker build -t ${APP_IMAGE}:$(git describe --tags --abbrev=0)-${CI_COMMIT_BRANCH} .
    - docker push ${APP_IMAGE}:$(git describe --tags --abbrev=0)-${CI_COMMIT_BRANCH}
  tags:
    - windows


.deploy-to-stand-template:
  stage: deploy
  variables:
    EMV: default
    DEPLOY_COMMAND: helm upgrade --install
                    --set backendUserService.image.version=$(git describe --tags --abbrev=0)-${CI_COMMIT_BRANCH}
                    backend-user-service-${ENV} ./backend-user-service
                    -f ./backend-user-service/values-${ENV}.yml
  script:
    - cd ./chart
    - Invoke-Expression $DEPLOY_COMMAND
  environment:
    name: $ENV
  tags:
    - windows


deploy-to-feature:
  extends: .deploy-to-stand-template
  variables:
    ENV: feature
  rules:
    - if: $CI_COMMIT_BRANCH == $BRANCH_FEATURE


deploy-to-dev:
  extends: .deploy-to-stand-template
  variables:
    ENV: dev
  rules:
    - if: $CI_COMMIT_BRANCH == $BRANCH_DEV


deploy-to-preprod:
  extends: .deploy-to-stand-template
  variables:
    ENV: preprod
  rules:
    - if: $CI_COMMIT_BRANCH == $BRANCH_PREPROD
      when: manual

#deploy-to-stand:
#  stage: deploy
#  rules:
#    - if: $CI_COMMIT_BRANCH == "feature"
#      variables:
#        DEPLOY_COMMAND: helm upgrade --install
#                        --set backendUserService.image.version=$(git describe --tags --abbrev=0)-${CI_COMMIT_BRANCH}
#                        backend-user-service-feature ./backend-user-service
#                        -f ./backend-user-service/values-feature.yml
#
#    - if: $CI_COMMIT_BRANCH == "dev"
#      variables:
#        DEPLOY_COMMAND: helm upgrade --install
#                        --set backendUserService.image.version=$(git describe --tags --abbrev=0)-${CI_COMMIT_BRANCH}
#                        backend-user-service-dev ./backend-user-service
#                        -f ./backend-user-service/values-dev.yml
#
#    - if: $CI_COMMIT_BRANCH == "preprod"
#      variables:
#        DEPLOY_COMMAND: helm upgrade --install
#                        --set backendUserService.image.version=$(git describe --tags --abbrev=0)-${CI_COMMIT_BRANCH}
#                        backend-user-service-preprod ./backend-user-service
#                        -f ./backend-user-service/values-preprod.yml
#
#  script:
#    - cd ./chart
#    - Invoke-Expression $DEPLOY_COMMAND
#  tags:
#    - windows